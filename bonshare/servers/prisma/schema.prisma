// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role{
  Admin
  User
}

model Avatars{
  id  String @id @default(auto()) @map("_id") @db.ObjectId
  public_id String
  url   String
  user User @relation(fields: [userId], references:[id])
  userId String @unique @db.ObjectId
}

model User {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email String @unique
  phone_number Float?
  address String?
  password String
  avatar Avatars?
  reviews Reviews[]
  role  Role  @default(User)
  createdAt DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([email, phone_number], name: "unique_email_phone_number")
}

model Reviews {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  review String
  rating Float
  userId String @db.ObjectId
  user  User @relation(fields:  [userId], references: [id])
  car Vehicles @relation(fields: [carId], references: [id])
  carId String @db.ObjectId

}

model Images {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  public_id String
  url String
  carId String @db.ObjectId
  car Vehicles @relation(fields: [carId],references:[id]) 
}

model Vehicles{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  description String
  driver String
  capacity Int
  plate_number String
  price Int
  images  Images[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Reviews Reviews[]

}